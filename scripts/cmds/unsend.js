module.exports = {
config: {
name: "unsend",
aliases: ["un", "u", "uns", "unsent"],
version: "2.2",
author: "NTKhang | Azad ЁЯТе ",
countDown: 5,
role: 0,
description: {
en: "Delete bot messages (works with prefix + no prefix in group)"
},
category: "box chat",
guide: {
en: "Reply a bot's message and type unsend"
},
usePrefix: false
},

// ржЧрж╛рж▓рж┐ рж▓рж┐рж╕рзНржЯ  
errors: [  
	"рждрзБржЗ ржХрж┐ ржорж╛рзЯрзЗрж░ ржкрзЗржЯ ржерзЗржХрзЗ ржмрзБржжрзНржзрж┐ ржЖржирждрзЗ ржнрзБрж▓рзЗ ржЧрзЗржЫрж┐рж╕?",  
	"ржПржд ржмрзЗржХрзБржм ржХрзЛржерж╛ ржерзЗржХрзЗ ржЖрж╕рж┐рж╕ рж░рзЗ?",  
	"ржЧрж╛ржзрж╛! рж░рж┐ржкрзНрж▓рж╛ржЗ ржжрзЗ ржЖржЧрзЗ, ржиржЗрж▓рзЗ ржорж╛ржерж╛рзЯ рж▓рж╛ржерж┐ ржЦрж╛ржмрж┐!",  
	"рждрзЛрж░рзЗ ржжрж┐рзЯрзЗ ржмржЯ ржЪрж╛рж▓рж╛ржирзЛ ржорж╛ржирзЗ ржЫрж╛ржЧрж▓ржХрзЗ ржЧрж┐ржЯрж╛рж░ ржзрж░рж╛ржирзЛ!",  
	"ржорж╛ржерж╛рзЯ ржЧрзЛржмрж░ ржнрж░рж╛ ржирж╛ржХрж┐ рждрзЛрж░?",  
	"ржЪрзЛржЦ ржерж╛ржХрж▓рзЗ ржжрзЗржЦрж┐рж╕ ржирж╛ ржХрзЗржи? рж░рж┐ржкрзНрж▓рж╛ржЗ ржжрзЗ!",  
	"рждрзБржЗ ржПрждржЯрж╛ ржЧрзЗржБрзЯрзЛ ржХрзЗржи рж╣ржЗрж▓рж┐ рж░рзЗ?",  
	"ржмрзЛржХрж╛ржЪрзЛржжрж╛, ржЖржЧрзЗ рж░рж┐ржкрзНрж▓рж╛ржЗ ржжрзЗ рждрж╛рж░ржкрж░ ржХржорж╛ржирзНржб ржЪрж╛рж▓рж╛!",  
	"рждрзЛрж░рзЗ ржжрж┐рзЯрзЗ ржХрж┐ржЫрзБ рж╣ржмрзЗ ржирж╛, рж╣рж╛ржмрж▓рзБ ржХрж╛рждрж▓рж╛!",  
	"рждрзЛрж░рзЗ ржорж╛рж░рж▓рзЗ ржбрж┐ржо ржлрзЛржЯрж╛рж░ ржЖржЧрзЗржЗ ржЕржорж▓рзЗржЯ рж╣рзЯрзЗ ржпрж╛рж╕ред"  
],  

// Helper function: ржмржХрзНрж╕рзЗ ржЯрзЗржХрзНрж╕ржЯ ржкрж╛ржарж╛ржирзЛ  
boxText(text) {  
	return `тЬжтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтЬж\n${text}\nтЬжтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтЬж`;  
},  

// Prefix ржжрж┐рзЯрзЗ ржЪрж╛рж▓рж╛рж▓рзЗ  
onStart: async function ({ message, event, api }) {  
	if (!event.messageReply || !event.messageReply.messageID || event.messageReply.senderID != api.getCurrentUserID()) {  
		const arr = module.exports.errors;  
		const randomError = arr[Math.floor(Math.random() * arr.length)];  
		return message.reply(module.exports.boxText(randomError));  
	}  
	await message.unsend(event.messageReply.messageID);  
	return message.reply(module.exports.boxText("тЬЕ Message unsent successfully!"));  
},  

// Prefix ржЫрж╛рзЬрж╛ рж╢рзБржзрзБ ржЧрзНрж░рзБржкрзЗ  
onChat: async function ({ event, message, api }) {  
	if (!event.isGroup) return;  

	const body = event.body?.toLowerCase();  
	if (!body) return;  

	if (["unsend", "un", "u", "uns", "unsent"].includes(body.trim())) {  
		if (!event.messageReply || !event.messageReply.messageID || event.messageReply.senderID != api.getCurrentUserID()) {  
			const arr = module.exports.errors;  
			const randomError = arr[Math.floor(Math.random() * arr.length)];  
			return message.reply(module.exports.boxText(randomError));  
		}  
		await message.unsend(event.messageReply.messageID);  
		return message.reply(module.exports.boxText("тЬЕ Message unsent successfully!"));  
	}  
}

};
